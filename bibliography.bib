% Evolutionary Algorithms

@article{koza2010human,
	title={Human-competitive results produced by genetic programming},
	author={Koza, John R.},
	journal={Genetic Programming and Evolvable Machines},
	volume={11},
	number={3-4},
	pages={251--284},
	year={2010},
	publisher={Springer-Verlag},
	doi = {10.1007/s10710-010-9112-3},
	url = {https://doi.org/10.1007/s10710-010-9112-3}
}

@book{coello2007evolutionary,
	title={Evolutionary Algorithms for Solving Multi-Objective Problems},
	author={Coello, Carlos A. Coello and Lamont, Gary B. and Van Veldhuizen, David A. and others},
	volume={5},
	year={2007},
	publisher={Springer-Verlag}
}

@article{koza1994genetic,
	title={Genetic programming as a means for programming computers by natural selection},
	author={Koza, John R.},
	journal={Statistics and computing},
	volume={4},
	number={2},
	pages={87--112},
	year={1994},
	publisher={Springer-Verlag},
	doi = {10.1007/BF00175355},
	url = {https://doi.org/10.1007/BF00175355}
}

@incollection{goldberg1991comparative,
	title={A comparative analysis of selection schemes used in genetic algorithms},
	author={Goldberg, David E and Deb, Kalyanmoy},
	booktitle={Foundations of genetic algorithms},
	volume={1},
	pages={69--93},
	year={1991},
	publisher={Elsevier}
}

@article{poli1998schema,
	title={Schema theory for genetic programming with one-point crossover and point mutation},
	author={Poli, Riccardo and Langdon, William B},
	journal={Evolutionary Computation},
	volume={6},
	number={3},
	pages={231--252},
	year={1998},
	publisher={MIT Press One Rogers Street, Cambridge, MA 02142-1209, USA journals-info~…}
}

@inproceedings{la2016epsilon,
	title={Epsilon-lexicase selection for regression},
	author={La Cava, William and Spector, Lee and Danai, Kourosh},
	booktitle={Proceedings of the Genetic and Evolutionary Computation Conference 2016},
	pages={741--748},
	year={2016}
}

@article{helmuth2014solving,
	title={Solving uncompromising problems with lexicase selection},
	author={Helmuth, Thomas and Spector, Lee and Matheson, James},
	journal={IEEE Transactions on Evolutionary Computation},
	volume={19},
	number={5},
	pages={630--643},
	year={2014},
	publisher={IEEE}
}

@incollection{sudholt2015parallel,
	title={Parallel evolutionary algorithms},
	author={Sudholt, Dirk},
	booktitle={Springer Handbook of Computational Intelligence},
	pages={929--959},
	year={2015},
	publisher={Springer}
}

@article{gong2015distributed,
	title={Distributed evolutionary algorithms and their models: A survey of the state-of-the-art},
	author={Gong, Yue-Jiao and Chen, Wei-Neng and Zhan, Zhi-Hui and Zhang, Jun and Li, Yun and Zhang, Qingfu and Li, Jing-Jing},
	journal={Applied Soft Computing},
	volume={34},
	pages={286--300},
	year={2015},
	publisher={Elsevier}
}

@article{pitzer2012comprehensive,
	title={A comprehensive survey on fitness landscape analysis},
	author={Pitzer, Erik and Affenzeller, Michael},
	journal={Recent advances in intelligent engineering systems},
	pages={161--191},
	year={2012},
	publisher={Springer}
}

@article{deb2013evolutionary,
	title={An evolutionary many-objective optimization algorithm using reference-point-based nondominated sorting approach, part I: solving problems with box constraints},
	author={Deb, Kalyanmoy and Jain, Himanshu},
	journal={IEEE transactions on evolutionary computation},
	volume={18},
	number={4},
	pages={577--601},
	year={2013},
	publisher={IEEE}
}

@inproceedings{fang2010review,
	title={A review of tournament selection in genetic programming},
	author={Fang, Yongsheng and Li, Jun},
	booktitle={International Symposium on Intelligence Computation and Applications},
	pages={181--192},
	year={2010},
	organization={Springer}
}

@article{lipowski2012roulette,
	title={Roulette-wheel selection via stochastic acceptance},
	author={Lipowski, Adam and Lipowska, Dorota},
	journal={Physica A: Statistical Mechanics and its Applications},
	volume={391},
	number={6},
	pages={2193--2196},
	year={2012},
	publisher={Elsevier}
}

@incollection{deb2015multi,
	title={Multi-objective evolutionary algorithms},
	author={Deb, Kalyanmoy},
	booktitle={Springer handbook of computational intelligence},
	pages={995--1015},
	year={2015},
	publisher={Springer}
}

@incollection{deb2011multi,
	title={Multi-objective optimisation using evolutionary algorithms: an introduction},
	author={Deb, Kalyanmoy},
	booktitle={Multi-objective evolutionary optimisation for product design and manufacturing},
	pages={3--34},
	year={2011},
	publisher={Springer}
}

@book{coello2007evolutionary,
	title={Evolutionary algorithms for solving multi-objective problems},
	author={Coello, Carlos A Coello and Lamont, Gary B and Van Veldhuizen, David A and others},
	volume={5},
	year={2007},
	publisher={Springer}
}

@book{poli2008field,
	author = {Poli, Riccardo and Langdon, William B. and McPhee, Nicholas Freitag},
	title = {A Field Guide to Genetic Programming},
	year = {2008},
	isbn = {1409200736},
	publisher = {Lulu Enterprises, UK Ltd},
	abstract = {Genetic programming (GP) is a systematic, domain-independent method for getting computers to solve problems automatically starting from a high-level statement of what needs to be done. Using ideas from natural evolution, GP starts from an ooze of random computer programs, and progressively refines them through processes of mutation and sexual recombination, until high-fitness solutions emerge. All this without the user having to know or specify the form or structure of solutions in advance. GP has generated a plethora of human-competitive results and applications, including novel scientific discoveries and patentable inventions. This unique overview of this exciting technique is written by three of the most active scientists in GP. See www.gp-field-guide.org.uk for more information on the book.}
}

@article{o2001grammatical,
	title={Grammatical evolution},
	author={O'Neill, Michael and Ryan, Conor},
	journal={IEEE Transactions on Evolutionary Computation},
	volume={5},
	number={4},
	pages={349--358},
	year={2001},
	publisher={IEEE}
}

@inproceedings{miller2008cartesian,
	title={Cartesian genetic programming},
	author={Miller, Julian Francis and Harding, Simon L},
	booktitle={Proceedings of the 10th annual conference companion on Genetic and evolutionary computation},
	pages={2701--2726},
	year={2008}
}

@book{brameier2007linear,
	title={Linear genetic programming},
	author={Brameier, Markus and Banzhaf, Wolfgang and Banzhaf, Wolfgang},
	volume={1},
	year={2007},
	publisher={Springer}
}



@book{back1997handbook,
author = {Back, Thomas and Fogel, David B. and Michalewicz, Zbigniew},
title = {Handbook of Evolutionary Computation},
year = {1997},
isbn = {0750303921},
publisher = {IOP Publishing Ltd.},
address = {GBR},
edition = {first}
}

@article{deb2002fast,
	author={K. {Deb} and A. {Pratap} and S. {Agarwal} and T. {Meyarivan}},
	journal={IEEE Transactions on Evolutionary Computation}, 
	title={A fast and elitist multiobjective genetic algorithm: NSGA-II}, 
	year={2002},
	volume={6},
	number={2},
	pages={182-197},
	doi={10.1109/4235.996017}
}

@article{montana1995strongly,
	author = {Montana, David J.},
	title = "{Strongly Typed Genetic Programming}",
	journal = {Evolutionary Computation},
	volume = {3},
	number = {2},
	pages = {199-230},
	year = {1995},
	month = {06},
	abstract = "{Genetic programming is a powerful method for automatically generating computer programs via the process of natural selection (Koza, 1992). However, in its standard form, there is no way to restrict the programs it generates to those where the functions operate on appropriate data types. In the case when the programs manipulate multiple data types and contain functions designed to operate on particular data types, this can lead to unnecessarily large search times and/or unnecessarily poor generalization performance. Strongly typed genetic programming (STGP) is an enhanced version of genetic programming that enforces data-type constraints and whose use of generic functions and generic data types makes it more powerful than other approaches to type-constraint enforcement. After describing its operation, we illustrate its use on problems in two domains, matrix/vector manipulation and list manipulation, which require its generality. The examples are (1) the multidimensional least-squares regression problem, (2) the multidimensional Kalman filter, (3) the list manipulation function NTH, and (4) the list manipulation function MAPCAR.}",
	issn = {1063-6560},
	doi = {10.1162/evco.1995.3.2.199},
	url = {https://doi.org/10.1162/evco.1995.3.2.199},
	eprint = {https://direct.mit.edu/evco/article-pdf/3/2/199/1492842/evco.1995.3.2.199.pdf},
}

@inproceedings{whigham1995grammatically,
	title={Grammatically-based genetic programming},
	author={Whigham, Peter A and others},
	booktitle={Proceedings of the workshop on genetic programming: from theory to real-world applications},
	volume={16},
	number={3},
	pages={33--41},
	year={1995}
}

@article{mckay2010grammar,
	title={Grammar-based genetic programming: a survey},
	author={Mckay, Robert I and Hoai, Nguyen Xuan and Whigham, Peter Alexander and Shan, Yin and O’neill, Michael},
	journal={Genetic Programming and Evolvable Machines},
	volume={11},
	number={3-4},
	pages={365--396},
	year={2010},
	publisher={Springer}
}

@inproceedings{garcia2006initialization,
	title={Initialization method for grammar-guided genetic programming},
	author={Garc{\'\i}a-Arnau, Marc and Manrique, Daniel and Rios, Juan and Rodr{\'\i}guez-Pat{\'o}n, Alfonso},
	booktitle={International Conference on Innovative Techniques and Applications of Artificial Intelligence},
	pages={32--44},
	year={2006},
	organization={Springer}
}

@article{criado2020grammatically,
	title={Grammatically uniform population initialization for grammar-guided genetic programming},
	author={Criado, Pablo Ramos and Rolan{\'\i}a, D Barrios and Manrique, Daniel and Serrano, Emilio},
	journal={Soft Computing},
	volume={24},
	number={15},
	pages={11265--11282},
	year={2020},
	publisher={Springer}
}

@article{couchet2007crossover,
	title={Crossover and mutation operators for grammar-guided genetic programming},
	author={Couchet, Jorge and Manrique, Daniel and Rios, Juan and Rodr{\'\i}guez-Pat{\'o}n, Alfonso},
	journal={Soft Computing},
	volume={11},
	number={10},
	pages={943--955},
	year={2007},
	publisher={Springer}
}

@article{rainville2012deap, 
	author    = " F\'elix-Antoine Fortin and Fran\c{c}ois-Michel {De Rainville} and Marc-Andr\'e Gardner and Marc Parizeau and Christian Gagn\'e ",
	title     = { {DEAP}: Evolutionary Algorithms Made Easy },
	pages    = { 2171--2175 },
	volume    = { 13 },
	month     = { jul },
	year      = { 2012 },
	journal   = { Journal of Machine Learning Research }
}

@article{gong2015distributed,
	title = "Distributed evolutionary algorithms and their models: A survey of the state-of-the-art",
	journal = "Applied Soft Computing",
	volume = "34",
	pages = "286 - 300",
	year = "2015",
	issn = "1568-4946",
	doi = "https://doi.org/10.1016/j.asoc.2015.04.061",
	url = "http://www.sciencedirect.com/science/article/pii/S1568494615002987",
	author = "Yue-Jiao Gong and Wei-Neng Chen and Zhi-Hui Zhan and Jun Zhang and Yun Li and Qingfu Zhang and Jing-Jing Li",
	keywords = "Distributed evolutionary computation, Coevolutionary computation, Evolutionary algorithms, Global optimization, Multiobjective optimization",
	abstract = "The increasing complexity of real-world optimization problems raises new challenges to evolutionary computation. Responding to these challenges, distributed evolutionary computation has received considerable attention over the past decade. This article provides a comprehensive survey of the state-of-the-art distributed evolutionary algorithms and models, which have been classified into two groups according to their task division mechanism. Population-distributed models are presented with master-slave, island, cellular, hierarchical, and pool architectures, which parallelize an evolution task at population, individual, or operation levels. Dimension-distributed models include coevolution and multi-agent models, which focus on dimension reduction. Insights into the models, such as synchronization, homogeneity, communication, topology, speedup, advantages and disadvantages are also presented and discussed. The study of these models helps guide future development of different and/or improved algorithms. Also highlighted are recent hotspots in this area, including the cloud and MapReduce-based implementations, GPU and CUDA-based implementations, distributed evolutionary multiobjective optimization, and real-world applications. Further, a number of future research directions have been discussed, with a conclusion that the development of distributed evolutionary computation will continue to flourish."
}

% Evolution Strategies
@article{beyer2002evolution,
	title={Evolution strategies - A comprehensive introduction},
	author={Beyer, Hans-Georg and Schwefel, Hans-Paul},
	journal={Natural computing},
	volume={1},
	number={1},
	pages={3--52},
	year={2002},
	publisher={Springer-Verlag}
}

@article{hansen2001completely,
author = {Hansen, Nikolaus and Ostermeier, Andreas},
title = {Completely Derandomized Self-Adaptation in Evolution Strategies},
year = {2001},
issue_date = {June 2001},
publisher = {MIT Press},
address = {Cambridge, MA, USA},
volume = {9},
number = {2},
issn = {1063-6560},
url = {https://doi.org/10.1162/106365601750190398},
doi = {10.1162/106365601750190398},
journal = {Evol. Comput.},
month = jun,
pages = {159–195},
numpages = {37}
}

% Multigrid Theory

@article{fedorenko1961relaxation,
	title={A relaxation method for solving elliptic difference equations},
	author={Fedorenko, Radii Petrovich},
	journal={Zhurnal Vychislitel'noi Matematiki i Matematicheskoi Fiziki},
	volume={1},
	number={5},
	pages={922--927},
	year={1961},
	publisher={Russian Academy of Sciences, Branch of Mathematical Sciences}
}


@article{brandt1977multi,
	title={Multi-level adaptive solutions to boundary-value problems},
	author={Brandt, Achi},
	journal={Mathematics of computation},
	volume={31},
	number={138},
	pages={333--390},
	year={1977}
}

@book{hackbusch2013multi,
	title={Multi-Grid Methods and Applications},
	author={Hackbusch, Wolfgang},
	year={1985},
	publisher={Springer-Verlag}
}

@book{trottenberg2000multigrid,
	title={Multigrid},
	author={Trottenberg, Ulrich and Oosterlee, Cornelius W. and Schuller, Anton},
	year={2000},
	publisher={Elsevier}
}

@book{briggs2000multigrid,
	author = {Briggs, William L. and Henson, Van Emden and McCormick, Steve F.},
	title = {A Multigrid Tutorial, Second Edition},
	publisher = {Society for Industrial and Applied Mathematics},
	year = {2000},
	doi = {10.1137/1.9780898719505},
	address = {},
	edition   = {Second},
	URL = {https://epubs.siam.org/doi/abs/10.1137/1.9780898719505},
	eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9780898719505}
}

% AI-based MG Optimization

@article{oosterlee2003genetic,
	author = {Oosterlee, C. W. and Wienands, R.},
	title = {A Genetic Search for Optimal Multigrid Components Within a Fourier Analysis Setting},
	journal = {SIAM Journal on Scientific Computing},
	volume = {24},
	number = {3},
	pages = {924-944},
	year = {2003},
	doi = {10.1137/S1064827501397950},
	
	URL = { 
	https://doi.org/10.1137/S1064827501397950
	
	}
}

@article{thekale2010optimizing,
	author = {Thekale, A. and Gradl, T. and Klamroth, K. and Rüde, U.},
	title = {Optimizing the number of multigrid cycles in the full multigrid algorithm},
	journal = {Numerical Linear Algebra with Applications},
	volume = {17},
	number = {2‐3},
	pages = {199-210},
	keywords = {full multigrid, optimization, Branch and Bound, hierarchical hybrid grids},
	doi = {10.1002/nla.697},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/nla.697},
	abstract = {Abstract Multigrid (MG) methods are among the most efficient and widespread methods for solving large linear systems of equations that arise, for example, from the discretization of partial differential equations. In this paper we introduce a new approach for optimizing the computational cost of the full MG method to achieve a given accuracy by determining the number of MG cycles on each level. To achieve this, a very efficient and flexible Branch and Bound algorithm is developed. The implementation in the parallel finite element solver Hierarchical Hybrid Grids leads to a significant reduction in CPU time. Copyright © 2010 John Wiley \& Sons, Ltd.},
	year = {2010}
}

@article{brown2021tuning,
	author = {Brown, Jed and He, Yunhui and MacLachlan, Scott and Menickelly, Matt and Wild, Stefan M.},
	title = {Tuning Multigrid Methods with Robust Optimization and Local Fourier Analysis},
	journal = {SIAM Journal on Scientific Computing},
	volume = {43},
	number = {1},
	pages = {A109-A138},
	year = {2021},
	doi = {10.1137/19M1308669},
	
	URL = { 
	https://doi.org/10.1137/19M1308669
	
	},
	eprint = { 
	https://doi.org/10.1137/19M1308669
	
	}
}
@inproceedings{greenfeld2019learning,
	title={Learning to optimize multigrid PDE solvers},
	author={Greenfeld, Daniel and Galun, Meirav and Basri, Ronen and Yavneh, Irad and Kimmel, Ron},
	booktitle={International Conference on Machine Learning},
	pages={2415--2423},
	year={2019}
}

@article{hsieh2019learning,
	title={Learning neural PDE solvers with convergence guarantees},
	author={Hsieh, Jun-Ting and Zhao, Shengjia and Eismann, Stephan and Mirabella, Lucia and Ermon, Stefano},
	journal={arXiv preprint},
	year={2019},
	eprint={1906.01200}
}

@article{katrutsa2020black,
	title={Black-box learning of multigrid parameters},
	author={Katrutsa, Alexandr and Daulbaev, Talgat and Oseledets, Ivan},
	journal={Journal of Computational and Applied Mathematics},
	volume={368},
	pages={112524},
	year={2020},
	publisher={Elsevier}
}

@article{huang2021learning,
	title={Learning optimal multigrid smoothers via neural networks},
	author={Huang, Ru and Li, Ruipeng and Xi, Yuanzhe},
	journal={arXiv preprint arXiv:2102.12071},
	year={2021}
}

@inproceedings{schmitt2020constructing,
	author = {Schmitt, Jonas and Kuckuk, Sebastian and K\"{o}stler, Harald},
	title = {Constructing Efficient Multigrid Solvers with Genetic Programming},
	year = {2020},
	isbn = {9781450371285},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3377930.3389811},
	doi = {10.1145/3377930.3389811},
	abstract = {For many linear and nonlinear systems that arise from the discretization of partial differential equations the construction of an efficient multigrid solver is a challenging task. Here we present a novel approach for the optimization of geometric multigrid methods that is based on evolutionary computation, a generic program optimization technique inspired by the principle of natural evolution. A multigrid solver is represented as a tree of mathematical expressions which we generate based on a tailored grammar. The quality of each solver is evaluated in terms of convergence and compute performance using automated local Fourier analysis (LFA) and roofline performance modeling, respectively. Based on these objectives a multi-objective optimization is performed using grammar-guided genetic programming with a non-dominated sorting based selection. To evaluate the model-based prediction and to target concrete applications, scalable implementations of an evolved solver can be automatically generated with the ExaStencils framework. We demonstrate the effectiveness of our approach by constructing multigrid solvers for a linear elastic boundary value problem that are competitive with common V- and W-cycles.},
	booktitle = {Proceedings of the 2020 Genetic and Evolutionary Computation Conference},
	pages = {1012–1020},
	numpages = {9},
	keywords = {local fourier analysis, context-free grammar, geometric multigrid, genetic programming, code generation},
	location = {Canc\'{u}n, Mexico},
	series = {GECCO '20}
}

% General Stuff

@book{varga1962iterative,
	title={Iterative analysis},
	author={Varga, Richard S},
	year={1962},
	publisher={Springer}
}


@book{saad2003iterative,
	author = {Saad, Yousef},
	title = {Iterative Methods for Sparse Linear Systems},
	publisher = {Society for Industrial and Applied Mathematics},
	year = {2003},
	doi = {10.1137/1.9780898718003},
	address = {},
	edition   = {Second},
	URL = {https://epubs.siam.org/doi/abs/10.1137/1.9780898718003},
	eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9780898718003}
}

@article{demmel2007fast,
	title={Fast linear algebra is stable},
	author={Demmel, James and Dumitriu, Ioana and Holtz, Olga},
	journal={Numerische Mathematik},
	volume={108},
	number={1},
	pages={59--91},
	year={2007},
	publisher={Springer-Verlag},
	doi = {10.1007/s00211-007-0114-x}, url={https://doi.org/10.1007/s00211-007-0114-x}} 
}

@book{holzapfel2001nonlinear,
	title={Nonlinear Solid Mechanics: A Continuum Approach for Engineering},
	author={Holzapfel, Gerhard},
	year={2001},
	publisher={John Wiley and Sons}
}


% Tools
@article{lengauer2020exastencils,
	title={ExaStencils--Advanced Multigrid Solver Generation},
	author={Lengauer, Christian and Apel, Sven and Bolten, Matthias and Chiba, Shigeru and R{\"u}de, Ulrich and Teich, J{\"u}rgen and Gr{\"o}{\ss}linger, Armin and Hannig, Frank and K{\"o}stler, Harald and Claus, Lisa and others},
	journal={Software for Exascale Computing-SPPEXA 2nd phase},
	year={2020}
}

@incollection{schmitt2016systems,
	title={Systems of partial differential equations in ExaSlang},
	author={Schmitt, Christian and Kuckuk, Sebastian and Hannig, Frank and Teich, J{\"u}rgen and K{\"o}stler, Harald and R{\"u}de, Ulrich and Lengauer, Christian},
	booktitle={Software for Exascale Computing-SPPEXA 2013-2015},
	pages={47--67},
	year={2016},
	publisher={Springer}
}

@inproceedings{schmitt2014exaslang,
	title={ExaSlang: A domain-specific language for highly scalable multigrid solvers},
	author={Schmitt, Christian and Kuckuk, Sebastian and Hannig, Frank and K{\"o}stler, Harald and Teich, J{\"u}rgen},
	booktitle={2014 Fourth international workshop on domain-specific languages and high-level frameworks for high performance computing},
	pages={42--51},
	year={2014},
	organization={IEEE}
}

@inproceedings{fortin2013generalizing,
	author = {Fortin, F\'{e}lix-Antoine and Grenier, Simon and Parizeau, Marc},
	title = {Generalizing the Improved Run-Time Complexity Algorithm for Non-Dominated Sorting},
	year = {2013},
	isbn = {9781450319638},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2463372.2463454},
	doi = {10.1145/2463372.2463454},
	booktitle = {Proceedings of the 15th Annual Conference on Genetic and Evolutionary Computation},
	pages = {615–622},
	numpages = {8},
	keywords = {non-dominated sort, time complexity},
	location = {Amsterdam, The Netherlands},
	series = {GECCO ’13}
}

%Fourier Analysis
@book{wienands2004practical,
	title={Practical Fourier analysis for multigrid methods},
	author={Wienands, Roman and Joppich, Wolfgang},
	year={2004},
	publisher={CRC press}
}
@article{kahl2020automated,
	title={Automated local Fourier analysis (aLFA)},
	author={Kahl, Karsten and Kintscher, Nils},
	journal={BIT Numerical Mathematics},
	volume={60},
	number={3},
	pages={651--686},
	year={2020},
	publisher={Springer}
}

@article{bolten2018fourier,
	author = {Bolten, Matthias and Rittich, Hannah},
	title = {Fourier Analysis of Periodic Stencils in Multigrid Methods},
	journal = {SIAM Journal on Scientific Computing},
	volume = {40},
	number = {3},
	pages = {A1642-A1668},
	year = {2018},
	doi = {10.1137/16M1073959},
	URL = { 
	https://doi.org/10.1137/16M1073959
	}
}

@PhdThesis{RitExtending2017,
	author    = {Rittich, Hannah},
	title     = {Extending and Automating Fourier Analysis for Multigrid Methods},
	school    = {University of Wuppertal},
	year      = {2017},
	month     = {June},
}

@article{williams2009roofline,
	author = {Williams, Samuel and Waterman, Andrew and Patterson, David},
	title = {Roofline: An Insightful Visual Performance Model for Multicore Architectures},
	year = {2009},
	issue_date = {April 2009},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {52},
	number = {4},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/1498765.1498785},
	doi = {10.1145/1498765.1498785},
	journal = {Commun. ACM},
	month = apr,
	pages = {65–76},
	numpages = {12}
}


@article{hager2016exploring,
	author = {Hager, Georg and Treibig, Jan and Habich, Johannes and Wellein, Gerhard},
	title = {Exploring Performance and Power Properties of Modern Multi-Core Chips via Simple Machine Models},
	year = {2016},
	issue_date = {February 2016},
	publisher = {John Wiley and Sons},
	address = {GBR},
	volume = {28},
	number = {2},
	issn = {1532-0626},
	url = {https://doi.org/10.1002/cpe.3180},
	doi = {10.1002/cpe.3180},
	journal = {Concurr. Comput. : Pract. Exper.},
	month = feb,
	pages = {189–210},
	numpages = {22},
	keywords = {performance modeling, ECM model, power modeling, multi-core}
}

@phdthesis{rittich2018extending,
	title={Extending and automating Fourier analysis for multigrid methods},
	author={Rittich, Hannah},
	year={2018},
	school={Universit{\"a}t Wuppertal, Fakult{\"a}t f{\"u}r Mathematik und Naturwissenschaften~…}
}

%Helmholtz

@incollection{ernst2012difficult,
	title={Why it is difficult to solve Helmholtz problems with classical iterative methods},
	author={Ernst, Oliver G. and Gander, Martin J.},
	booktitle={Numerical analysis of multiscale problems},
	pages={325--363},
	year={2012},
	publisher={Springer}
}

%Saddle Point Problems

@article{benzi2005numerical,
	title={Numerical solution of saddle point problems},
	author={Benzi, Michele and Golub, Gene H and Liesen, J{\"o}rg},
	journal={Acta numerica},
	volume={14},
	pages={1--137},
	year={2005},
	publisher={Cambridge University Press}
}

% AMG

@incollection{ruge1987algebraic,
	title={Algebraic multigrid},
	author={Ruge, John W and St{\"u}ben, Klaus},
	booktitle={Multigrid methods},
	pages={73--130},
	year={1987},
	publisher={SIAM}
}

@article{stuben2001introduction,
	title={An introduction to algebraic multigrid},
	author={St{\"u}ben, Klaus},
	journal={Multigrid},
	pages={413--532},
	year={2001}
}

%Formal languages
@book{linz2006introduction,
	title={An introduction to formal languages and automata},
	author={Linz, Peter},
	year={2006},
	publisher={Jones \& Bartlett Learning}
}

@book{pierce2002types,
	title={Types and programming languages},
	author={Pierce, Benjamin C and Benjamin, C},
	year={2002},
	publisher={MIT press}
}
